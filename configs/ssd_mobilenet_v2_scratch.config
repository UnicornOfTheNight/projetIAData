# configs/ssd_mobilenet_v2_scratch.config — commentaires
# Date : 2025-08-25 07:38
# Objectif : annoter les blocs principaux de configuration.

model {
  ssd {
    num_classes: 8
    image_resizer { fixed_shape_resizer { height: 640 width: 640 } }
    feature_extractor {
      type: "ssd_mobilenet_v2_fpn_keras"
      depth_multiplier: 1.0
      min_depth: 16
      conv_hyperparams {
        regularizer { l2_regularizer { weight: 0.00004 } }
        initializer { truncated_normal_initializer { stddev: 0.03 } }
        activation: RELU_6
        batch_norm { decay: 0.997 scale: true }
      }
    }
    anchor_generator {
      ssd_anchor_generator {
        num_layers: 5                        # match feature_map_spatial_dims = 5 levels
        min_scale: 0.2
        max_scale: 0.95
        aspect_ratios: [1.0, 2.0, 0.5, 3.0, 0.3333]
        reduce_boxes_in_lowest_layer: false  # keep same anchors per location on all maps
      }
    }
    box_coder { faster_rcnn_box_coder { y_scale: 10.0 x_scale: 10.0 height_scale: 5.0 width_scale: 5.0 } }
    matcher {
      argmax_matcher {
        matched_threshold: 0.5
        unmatched_threshold: 0.5
        ignore_thresholds: false
        negatives_lower_than_unmatched: true
        force_match_for_each_row: true
      }
    }
    similarity_calculator { iou_similarity {} }
    encode_background_as_zeros: true
    normalize_loss_by_num_matches: true
    loss {
      classification_loss { weighted_sigmoid_focal { alpha: 0.25 gamma: 2.0 } }
      localization_loss { weighted_smooth_l1 {} }
      classification_weight: 1.0
      localization_weight: 1.0
    }
    box_predictor {
      weight_shared_convolutional_box_predictor {
        depth: 128
        num_layers_before_predictor: 4
        kernel_size: 3
        conv_hyperparams {
          regularizer { l2_regularizer { weight: 0.00004 } }
          initializer { truncated_normal_initializer { stddev: 0.03 } }
          activation: RELU_6
          batch_norm { decay: 0.997 scale: true }
        }
      }
    }
  }
}

# Configurer l’entraînement

train_config {
  batch_size: 2
  num_steps: 30000
  optimizer {
    momentum_optimizer {
      learning_rate {
        cosine_decay_learning_rate {
          learning_rate_base: 0.02
          total_steps: 30000
          warmup_learning_rate: 0.006666
          warmup_steps: 1000
        }
      }
      momentum_optimizer_value: 0.9
    }
    use_moving_average: false
  }
  data_augmentation_options { random_horizontal_flip {} }
  data_augmentation_options { random_adjust_brightness {} }
  max_number_of_boxes: 100
  unpad_groundtruth_tensors: false
}

# Définir la source d’entraînement

train_input_reader {
  label_map_path: "label_map.pbtxt"
  tf_record_input_reader { input_path: ["data/tfrecords/train.record"] }
}

eval_config { metrics_set: "coco_detection_metrics" use_moving_averages: false }

# Définir la source d’évaluation

eval_input_reader {
  label_map_path: "label_map.pbtxt"
  shuffle: false
  num_readers: 1
  tf_record_input_reader { input_path: ["data/tfrecords/val.record"] }
}
